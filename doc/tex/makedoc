#! /usr/bin/env perl
#
# makedoc
#
$prog       = "CDO";
$longname   = "Climate Data Operators";
$moddir     = "mod";
$modules    = "Modules";
$help       = "operator_help.h";
$catalog    = "catalog.tex";
$refover    = "cdo_ref_over.tex";
#$reference  = "xxx.tex";
$refcard    = "cdo_refcard.tex";
$class      = "cdo_class";
#
open(README,   ">OPERATORS");
open(CDOHTML,   ">cdo_oper.html");
open(HELPFILE, ">$help");
open(TCFILE,   ">$catalog");
open(TROVER,   ">$refover");
#open(TRFILE,   ">$reference");
open(TRCARD,   ">$refcard");
open(CLASS,    ">$class");
#
$threecols = 0;
#
if ( $threecols == 1 ) {
  $len1 = "3.65in";
  $len2 = "0.75in";
  $len3 = "2.56in";
} else {
  $len1 = "3.95in";
  $len2 = "0.85in";
  $len3 = "2.76in";
}
#
$noper = 0;
#
#
open(MOFILE, $modules) || die "Open failed on module file $modules: $!\n";
#
#
print README "===========================\n";
print README "$prog  $longname\n";
print README "===========================\n";
print README "\n";
print README "Operator catalog:\n\n";
print CDOHTML "<H2 align=\"center\">CDO  -  Climate Data Operators</H2>\n";
print TCFILE "\\chapter*{\\label{opercat}Operator catalog}\n";
print TCFILE "\\addcontentsline{toc}{chapter}{Operator catalog}\n";
print TCFILE "\n";
#
if ( $threecols == 1 ) {
  print TRCARD "\\documentclass[landscape,a4paper]{article}\n";
  print TRCARD "\\usepackage{threecolumn}\n";
} else {
  print TRCARD "\\documentclass[a4paper,twocolumn,11pt]{article}\n";
}
print TRCARD "\n";
print TRCARD "\\usepackage{graphics}\n";
print TRCARD "\\usepackage{array,colortbl}\n";
print TRCARD "\n";
print TRCARD "% A4 29.7x21.0cm  11.7x8.26\n";
print TRCARD "\\setlength{\\hoffset}{-0.8in}\n";
print TRCARD "\\setlength{\\voffset}{-0.7in}\n";
print TRCARD "\n";
print TRCARD "\\setlength{\\headheight}{0in}\n";
print TRCARD "\\setlength{\\headsep}{0in}\n";
print TRCARD "\\setlength{\\topmargin}{0in}\n";
print TRCARD "\n";
if ( $threecols == 1 ) {
  print TRCARD "\\setlength{\\textwidth}{11.3in}\n";
  print TRCARD "\\setlength{\\textheight}{7.8in}\n";
} else {
  print TRCARD "\\setlength{\\textwidth}{7.85in}\n";
  print TRCARD "\\setlength{\\textheight}{11.2in}\n";
}
print TRCARD "\\setlength{\\oddsidemargin}{0in}     % default=0in\n";
print TRCARD "\\setlength{\\evensidemargin}{0in}    % default=0in\n";
print TRCARD "\n";
print TRCARD "\\setlength{\\columnsep}{0.2in}       % default=10pt\n";
print TRCARD "%\\setlength{\\columnseprule}{1pt}     % default=0pt (no line)\n";
print TRCARD "\n";
print TRCARD "%\\setlength{\\topmargin}{-0.15in}    % default=0.20in\n";
print TRCARD "%\\setlength{\\headsep}{0.15in}       % default=0.35in\n";
print TRCARD "\n";
print TRCARD "\\setlength{\\parskip}{-0.02in}\n";
print TRCARD "\\setlength{\\parindent}{0in}\n";
print TRCARD "\n";
print TRCARD "\\newenvironment{defalist}[1]\n";
print TRCARD "{\\begin{list}{}\n";
print TRCARD "{\\settowidth{\\labelwidth}{\\bf #1\\ \\ }\n";
print TRCARD "\\setlength{\\topsep}{-0.5mm}\n";
print TRCARD "\\setlength{\\parsep}{0mm}\n";
print TRCARD "\\setlength{\\itemsep}{0mm}\n";
print TRCARD "\\setlength{\\itemindent}{0mm}\n";
print TRCARD "\\setlength{\\leftmargin}{\\labelwidth}\n";
print TRCARD "\\setlength{\\labelsep}{0mm}\n";
print TRCARD "\\addtolength{\\leftmargin}{\\labelsep}\n";
print TRCARD "}}\n";
print TRCARD "{\\end{list}}\n";
print TRCARD "\n";
print TRCARD "\\begin{document}\n";
print TRCARD "\\footnotesize\n";
if ( $threecols == 1 ) {
  print TRCARD "\\threecolumn\n";
  print TRCARD "\n";
  print TRCARD "\\input{cdoprog}\n";
} else {
  print TRCARD "\\twocolumn\n";
  print TRCARD "\n";
  print TRCARD "\\input{cdoprog}\n";
}
print TRCARD "\n";
print TRCARD "\\vspace*{2mm}\n";
print TRCARD "\\subsection*{Operators}\n";
print TRCARD "\n";
#
$help_print = 1;
$oldchap = "oldchap";
$nline = 0;
while (<MOFILE>) {
    chomp;
    ($modulefile) = split(" ");
    print "process module: $modulefile\n";
    $modulefilename = "${moddir}/${modulefile}";
    open(MODFILE, "$modulefilename") || die "Open failed on module file $modulefilename: $!\n";
    $module    = "";
    $margs     = "";
    $operators  = "";
    undef @doclines;
    $lblock = 0;
    while (<MODFILE>) {
      chomp;
      if ( index($_ , "\@C ") != 0 ) {
	push(@doclines, $_);
      }
    }
    close(MODFILE);

    undef @modlines;
    $lblock = 0;
    foreach $tag (@doclines) {
      ($kword) = split(" ", $tag);
      $kword = uc($kword);
      if ( $lblock == 0 ) {
	if ( "$kword" eq "\@BEGINMODULE" ) {
	  $lblock = 1;
	  next;
	}
      }
      if ( $lblock == 1 ) {
	if ( "$kword" eq "\@ENDMODULE" ) { last; }
	push(@modlines, $tag);
      }
    }

    if ( $lblock == 0 ) {
      print "$modulefile: Module description not found!\n";
      next;
    }

    $mname      = "";
    $mtitle     = "";
    $msection   = "";
    $marguments = "";
    $moperators = "";
    $newpage = 0;
    $oclass     = "Other";
    foreach $tag (@modlines) {
      $line = $tag;
      $line =~ s/^\s+|\s+$//og;
      ($kword, $value) = split(/\s*=\s*/, $line, 2);
      $kword = uc($kword);
      if ( "$kword" eq "\@NAME" ) {
	$mname = $value;
      }
      elsif ( "$kword" eq "\@TITLE" ) {
	$mtitle = $value;
      }
      elsif ( "$kword" eq "\@SECTION" ) {
	$msection = $value;
      }
      elsif ( "$kword" eq "\@ARGUMENTS" ) {
	$marguments = $value;
      }
      elsif ( "$kword" eq "\@OPERATORS" ) {
	$moperators = $value;
      }
      elsif ( "$kword" eq "\@CLASS" ) {
	$oclass = $value;
      }
      elsif ( "$kword" eq "\@NEWPAGE" ) {
	$newpage = 1;
      }
    }

    $chap = $msection;

    $nline = $nline + 1;
    if ( "$chap" ne "$oldchap" ) {
      $oldchap = $chap;
      if ( $nline > 1 ) {
# 	print TCFILE "\\end{tabular*}\n";
# 	print TCFILE "\n";
      }

      print README "-------------------------------------------------------------\n";
      print README "   $chap\n";
      print README "-------------------------------------------------------------\n";
      print TCFILE "\\subsection*{$chap}\n";

      $shortname = lc(substr($chap, 0, 6));
      $shortname =~ s/ /_/og;
      $reference  = "ref_man_${shortname}.tex";
      open(TRFILE, ">$reference");

      $reflist   = "ref_list_${shortname}.tex";
      open(TRLIST, ">$reflist");

      print CDOHTML "<A NAME=\"${shortname}\"></A><H3>$chap</H3>\n";

      print TRLIST "\n";
      print TRLIST "Here is a short overview of all operators in this section:\\\\\n";
      print TRLIST "\n";

      print TROVER "\\newpage\n";
      print TROVER "\\section{$chap}\n";
      print TROVER "\\input{ref_intro_${shortname}}\n";
      print TROVER "\\input{ref_list_${shortname}}\n";
      print TROVER "\\input{ref_man_${shortname}}\n\n";
      print TRCARD "\\subsubsection*{$chap}\n";
#      print TCFILE "\\begin{tabular*}{13cm}{ll}\n";
#      print TCFILE "\\hspace*{30mm} &  \\\\ \n";

#      print TRFILE "\n\n\\section{$chap}\n";
    }

    print HELPFILE "\n";
    print HELPFILE "static char *${mname}Help[] = {\n";

    @hkeys = split(" ", $moperators);
#    print "$#hkeys @hkeys \n";

    print TRFILE "\n";
    if ( $newpage == 1 ) {
       print TRFILE "\n\\newpage\n";
    }
    $modname = uc($mname);
    print TRFILE "\\subsection{$modname - $mtitle}\n";
#    print TRFILE "\\index{$modname}\n";
    foreach $tag (@hkeys) {
      $ntag = $tag;
      $ntag =~ s/^-//;
      $ntag =~ s/_/\\_/;
      print TRFILE "\\index{$ntag}\n";
    }
    print TRFILE "\\label{$modname}\n";
    foreach $tag (@hkeys) {
      $ntag = $tag;
      $ntag =~ s/^-//;
      print TRFILE "\\label{$ntag}\n";
    }

#   Decription (module)

    undef @moddeslines;
    $lblock = 0;
    foreach $tag (@modlines) {
      ($kword) = split(" ", $tag);
      $kword = uc($kword);
      if ( $lblock == 0 ) {
	if ( "$kword" eq "\@BEGINDESCRIPTION" ) {
	  $lblock = 1;
	  next;
	}
      }
      if ( $lblock == 1 ) {
	if ( "$kword" eq "\@ENDDESCRIPTION" ) { last; }
	push(@moddeslines, $tag);
      }
    }


#  Operators

    print TCFILE "\\noindent\n";
    print TCFILE "\\begin{tabular*}{13cm}{ll}\n";

    print TRLIST "\\noindent\n";
    print TRLIST "\\begin{tabular*}{13cm}{ll}\n";

    print CDOHTML "<table WIDTH=\"60%\" border=\"0\">\n";

    print TRCARD "\\noindent\n";
    print TRCARD "\\begin{tabular*}{$len1}{|l|l|} \\hline\n";

    print HELPFILE "    \"NAME\",\n";
    print HELPFILE "    \"    ";
    $maxlen = 0;
    $maxitem = "";
    foreach $operator (@hkeys) {
      $len = length($operator);
      if ( index("$operator", "-") == 0 ) { $len -= 1; }
      if ( $len > $maxlen ) {
	$maxlen = $len;
        $maxitem = $operator;
      }
    }
    $maxlen += 2;

    $icount = 0;
    $slen = 0;
    foreach $operator (@hkeys) {
      if ( $icount > 0 ) {
	print HELPFILE ", ";
        $slen += 2;
      }
      $norefoper = 0;
#      $operator =~ s/^-//;
      if ( index("$operator", "-") == 0 ) {
	$operator =~ s/^-//;
        $norefoper = 1;
      }
      $len = length($operator);
      if ( $len + $slen > 76 ) {
	$slen = 0;
	print HELPFILE "\",\n";
	print HELPFILE "    \"    ";
      }
      $slen += $len;
      print HELPFILE "${operator}";
      if ( $norefoper == 1 ) {
	$operator =~ s/^/-/;
      }
      $icount++;
    }
    print HELPFILE " - ";
    $len = length(${mtitle});
    if ( $len + $slen > 76 ) {
      $slen = 0;
      print HELPFILE "\",\n";
      print HELPFILE "    \"    ";
    }
    print HELPFILE "${mtitle}\",\n";

    undef @oper_title;
    undef @oper_parameter;
    $opercnt = 0;
    foreach $operator (@hkeys) {
      $opercnt += 1;
      $norefoper = 0;
      if ( index("$operator", "-") == 0 ) {
	$operator =~ s/^-//;
        $norefoper = 1;
      }

      undef @oplines;
      $lblock = 0;
      $opname = "";
      foreach $tag (@doclines) {
	($kword, $value) = split("_", $tag,2);
	$kword = uc($kword);
	if ( $lblock == 0 ) {
	  if ( "$kword" eq "\@BEGINOPERATOR" ) {
	    $lblock = 1;
	    $opname = $value;
	    next;
	  }
	}
	if ( $lblock == 1 ) {
	  if ( "$kword" eq "\@ENDOPERATOR" ) {
	    $lblock = 0;
	    if ( "$operator" eq "$opname" ) { last; }
	    else                            { next; }
	  }
	  if ( "$operator" eq "$opname" ) {
	    push(@oplines, $tag);
	  }
	}
      }

      $otitle     = "";
      $oparameter = "";
      foreach $tag (@oplines) {
	$line = $tag;
	$line =~ s/^\s+|\s+$//og;
	($kword, $value) = split(/\s*=\s*/, $line, 2);
	$kword = uc($kword);
	if ( "$kword" eq "\@TITLE" ) {
	  $otitle = $value;
	}
	elsif ( "$kword" eq "\@PARAMETER" ) {
	  (@param) = split(/\s+/, $value);
	  $nopt = 0;
	  for ( $i = 0; $i <= $#param; $i++ ) {
	    $tag = @param[$i];
	    $len = length($tag);
	    $x1 = 0;
	    if ( index($tag, "[") == 0 ) {
	      $nopt++;
	      $x1 = 1;
              $len = $len - 2;
	      $oparameter = "$oparameter\[";
	    }
	    $otag = substr $tag, $x1, $len;
	    $oparameter = "$oparameter,$otag";
	  }
	  for ( $i = 0; $i < $nopt; $i++ ) {
	    $oparameter = "$oparameter\]";
	  }
	}
      }
      @oper_title[$opercnt-1] = $otitle;
      @oper_parameter[$opercnt-1] = $oparameter;

      if ( $norefoper == 1 ) {
	$operator =~ s/^/-/;
      }
    }
#    print "@hkeys\n";
#    print "@oper_title\n";

    $differ = 0;
    if ( $#hkeys > 0 ) {
      for ( $i = 1; $i <= $#hkeys; $i++ ) {
#	printf ("%d: %s\n",$i, @hkeys[$i]);
	if ( "@oper_parameter[$i]" ne "@oper_parameter[0]" )
	  {
	    $differ = 1;
	    last;
	  }
      }
    } else {
      $differ = 1;
    }

#    print "differ: $differ\n";

    print HELPFILE "    \"\",\n";
    print HELPFILE "    \"SYNOPSIS\",\n";
    print TRFILE "\n\\subsection*{Synopsis}\n\n";
    if ( $differ > 0 ) {
      for ( $i = 0; $i <= $#hkeys; $i++ ) {
	$operator = @hkeys[$i];
	$parameter = @oper_parameter[$i];
	printf HELPFILE ("    \"    %s%s  %s\",\n",
			 $operator, $parameter, $marguments);
	$operatorx = $operator;
	$operatorx =~ s/_/\\_/;
	print TRFILE "\\hspace*{8mm}{\\bf $operatorx}{\\sl $parameter} \\ {\\tt $marguments}\n\n";
      }
    } else {
      $parameter = @oper_parameter[0];
      print HELPFILE "    \"    <operator>${oparameter}  ${marguments}\",\n";
      print TRFILE "\\hspace*{8mm}{\$<\\!operator\\!>\$}{\\sl $oparameter} \\ {\\tt $marguments}\n\n";
    }

    print HELPFILE "    \"\",\n";
    print HELPFILE "    \"DESCRIPTION\",\n";

    print TRFILE "\n\\subsection*{Description}\n\n";
    if ( $#moddeslines >= 0 ) {
      print TRFILE "\\setlength{\\miniwidth}{\\textwidth}\n";
      print TRFILE "\\addtolength{\\miniwidth}{-8mm}\n";
      print TRFILE "\\hspace*{8mm}\\begin{minipage}{\\miniwidth}\n";
    }

    $help_spaces = 0;
    print_description(@moddeslines);

    if ( $#moddeslines >= 0 ) {
      print TRFILE "\\end{minipage}\n";
      print TRFILE "\\addtolength{\\miniwidth}{8mm}\n";
    }

    if ( $#hkeys > 0 ) {
      print HELPFILE "    \"\",\n";
      print HELPFILE "    \"OPERATORS\",\n";
      print TRFILE "\n\\subsection*{Operators}\n\n";
    }
    print TRFILE "\\setlength{\\miniwidth}{\\textwidth}\n";
    print TRFILE "\\addtolength{\\miniwidth}{-8mm}\n";
    print TRFILE "\\hspace*{8mm}\\begin{minipage}{\\miniwidth}\n";

    $opercnt = 0;
    $xopercnt = 0;
    $operpara = "";
    foreach $operator (@hkeys) {
      $norefoper = 0;
      if ( index("$operator", "-") == 0 ) {
	$operator =~ s/^-//;
        $norefoper = 1;
      }
      $opercnt += 1;
      $xopercnt += 1;
      print "      operator: $operator\n";
      $noper += 1;

      print CLASS "$operator\t$oclass\n";

      undef @oplines;
      $lblock = 0;
      $opname = "";
      foreach $tag (@doclines) {
	($kword, $value) = split("_", $tag, 2);
	$kword = uc($kword);
	if ( $lblock == 0 ) {
	  if ( "$kword" eq "\@BEGINOPERATOR" ) {
	    $lblock = 1;
	    $opname = $value;
	    next;
	  }
	}
	if ( $lblock == 1 ) {
	  if ( "$kword" eq "\@ENDOPERATOR" ) {
	    $lblock = 0;
	    if ( "$operator" eq "$opname" ) { last; }
	    else                            { next; }
	  }
	  if ( "$operator" eq "$opname" ) {
	    push(@oplines, $tag);
	  }
	}
      }

      if ( "$operator" ne "$opname" ) {
	print "$modulefile($operator): Operator description not found!\n";
	next;
      }

      $otitle = @oper_title[$opercnt-1];
      $oparameter = @oper_parameter[$opercnt-1];

      if ( $#hkeys > 0 ) {
	printf HELPFILE ("    \"    %-*s%s\",\n",
			$maxlen, $operator, $otitle);
	if ( $xopercnt == 1 ) {
	  print TRFILE "\\begin{defalist}{\\bf $maxitem \\ }\n";
	}
	$operatorx = $operator;
	$operatorx =~ s/_/\\_/;
	print TRFILE "\\item[{\\bf $operatorx}\\ \\ \\hfill]\n";
	print TRFILE "$otitle \\\\\n";
      }

      if ( "$otitle" ne "" ) {
	if ( $xopercnt > 1 && "$oparameter" ne "$operpara" ) {
	  print TRCARD "\\rowcolor[gray]{.9}\n";
	  print TRCARD "\\makebox[$len2][r]{Syntax} ";
	  if ( $xopercnt == 2 ) {
	    print TRCARD "& \\hspace*{0mm}{\\bf $opername}{\\sl $operpara} \ {\\tt $marguments} ";
	  } else {
	    print TRCARD "& \\hspace*{0mm}{\$<\\!operator\\!>\$}{\\sl $operpara} \ {\\tt $marguments} ";
	  }
	  print TRCARD "\\\\ \\hline \n";
	  $xopercnt = 1;
	}
	$opername = $operator;
	$operpara = $oparameter;

	if ( $norefoper == 0 ) {
	  printf README ("      %-10s %-15s %s\n", $modulefile, $operator, $otitle);
	  print CDOHTML "<tr>\n";
	  print CDOHTML "<td WIDTH=\"30%\" BGCOLOR=\"#FFF1B3\"> $operator </A> </td>\n";
	  print CDOHTML "<td WIDTH=\"70%\" BGCOLOR=\"#FFFFCC\"> $otitle </td>\n";
	  print CDOHTML "</tr>\n";
	}

	$operatorx = $operator;
	$operatorx =~ s/_/\\_/;
 	print TCFILE "\\hspace*{5mm}\\makebox[3cm][l]{\\bf \\htmlref{$operatorx}{$operator}} ";
 	print TCFILE "& $otitle ";
 	print TCFILE "\\\\ \n";

 	print TRLIST "\\hspace*{5mm}\\makebox[3cm][l]{\\bf \\htmlref{$operatorx}{$operator}} ";
 	print TRLIST "& $otitle ";
 	print TRLIST "\\\\ \n";

	if ( $norefoper == 0 ) {
	  print TRCARD "\\makebox[$len2][l]{\\bf {$operatorx}} ";
	  print TRCARD "& \\makebox[$len3][l]{$otitle} ";
	  print TRCARD "\\\\ \n";
	}
      } else {
 	print "$operator: TITLE not found!\n";
      }


#   Decription (operator)

      undef @deslines;
      $lblock = 0;
      foreach $tag (@oplines) {
	($kword) = split(" ", $tag);
	$kword = uc($kword);
	if ( $lblock == 0 ) {
	  if ( "$kword" eq "\@BEGINDESCRIPTION" ) {
	    $lblock = 1;
	    next;
	  }
	}
	if ( $lblock == 1 ) {
	  if ( "$kword" eq "\@ENDDESCRIPTION" ) { last; }
	  push(@deslines, $tag);
	}
      }

      if ( $#hkeys > 0 ) {
	$help_spaces = $maxlen;
      } else {
	$help_spaces = 0;
      }
      print_description(@deslines);
    }

    if ( $#hkeys > 0 ) {
      print TRFILE "\\end{defalist}\n";
    }
    print TRFILE "\\end{minipage}\n";
    print TRFILE "\\addtolength{\\miniwidth}{8mm}\n";

#   Parameter

    undef @parlines;
    $lblock = 0;
    foreach $tag (@doclines) {
      ($kword,$kopt) = split(" ", $tag);
      $kword = uc($kword);
      if ( $lblock == 0 ) {
	if ( "$kword" eq "\@BEGINPARAMETER" ) {
	  $lblock = 1;
	  next;
	}
      }
      if ( $lblock == 1 ) {
	if ( "$kword" eq "\@ENDPARAMETER" ) { last; }
	push(@parlines, $tag);
      }
    }

    if ( $lblock == 1 ) {
      $maxlen = 0;
      $maxitem = "";
      foreach $tag (@parlines) {
	$line = $tag;
	($kword,$kopt) = split(" ", $line);
	$kword = uc($kword);
#	if ( index("$kword", "\@ITEM") != -1 ) {
	if ( "$kword" eq "\@ITEM" ) {
	  ($kopt, $value) = split(/\s*=\s*/, $line, 2);
	  $len = length($value);
	  if ( $len > $maxlen ) {
	    $maxlen = $len;
	    $maxitem = $value;
	  }
	}
      }

      print HELPFILE "    \"\",\n";
      print HELPFILE "    \"PARAMETER\",\n";

      print TRFILE "\n\\subsection*{Parameter}\n\n";
      print TRFILE "\\setlength{\\miniwidth}{\\textwidth}\n";
      print TRFILE "\\addtolength{\\miniwidth}{-8mm}\n";
      print TRFILE "\\hspace*{8mm}\\begin{minipage}{\\miniwidth}\n";
      print TRFILE "\\begin{defalist}{\\sl $maxitem \\ }\n";

      foreach $tag (@parlines) {
	$line = $tag;
	($kword,$kopt) = split(" ", $line);
	$kword = uc($kword);
#	if ( index("$kword", "\@ITEM") != -1 ) {
	if ( "$kword" eq "\@ITEM" ) {
	  ($kopt, $value) = split(/\s*=\s*/, $line, 2);
	  printf HELPFILE ("    \"    %-*s  ", $maxlen, $value);
	  print TRFILE "\\item[{\\sl $value}\\ \\ \\hfill]\n";
	} else {
	  print HELPFILE "$line\",\n";
#	    $line = /\sFLOAT/XXX
	  $line =~ s/^FLOAT/\\makebox[20mm][l]{\\sf \\small FLOAT}/;
	  $line =~ s/^INTEGER/\\makebox[20mm][l]{\\sf \\small INTEGER}/;
	  $line =~ s/^STRING/\\makebox[20mm][l]{\\sf \\small STRING}/;
	  print TRFILE "$line\n";
	}
      }
      print TRFILE "\\end{defalist}\n";
      print TRFILE "\\end{minipage}\n";
      print TRFILE "\\addtolength{\\miniwidth}{8mm}\n";
    }

#   Environment

    undef @parlines;
    $lblock = 0;
    foreach $tag (@doclines) {
      ($kword,$kopt) = split(" ", $tag);
      $kword = uc($kword);
      if ( $lblock == 0 ) {
	if ( "$kword" eq "\@BEGINENVIRONMENT" ) {
	  $lblock = 1;
	  next;
	}
      }
      if ( $lblock == 1 ) {
	if ( "$kword" eq "\@ENDENVIRONMENT" ) { last; }
	push(@parlines, $tag);
      }
    }

    if ( $lblock == 1 ) {
      $maxlen = 0;
      $maxitem = "";
      foreach $tag (@parlines) {
	$line = $tag;
	($kword,$kopt) = split(" ", $line);
	$kword = uc($kword);
#	if ( index("$kword", "\@ITEM") != -1 ) {
	if ( "$kword" eq "\@ITEM" ) {
	  ($kopt, $value) = split(/\s*=\s*/, $line, 2);
	  $len = length($value);
	  if ( $len > $maxlen ) {
	    $maxlen = $len;
	    $maxitem = $value;
	    $maxitem =~ s/_/\\_/;
	  }
	}
      }

      print HELPFILE "    \"\",\n";
      print HELPFILE "    \"ENVIRONMENT\",\n";

      print TRFILE "\n\\subsection*{Environment}\n\n";
      print TRFILE "\\setlength{\\miniwidth}{\\textwidth}\n";
      print TRFILE "\\addtolength{\\miniwidth}{-8mm}\n";
      print TRFILE "\\hspace*{8mm}\\begin{minipage}{\\miniwidth}\n";
      print TRFILE "\\begin{defalist}{\\tt $maxitem \\ }\n";

      foreach $tag (@parlines) {
	$line = $tag;
	($kword,$kopt) = split(" ", $line);
	$kword = uc($kword);
#	if ( index("$kword", "\@ITEM") != -1 ) {
	if ( "$kword" eq "\@ITEM" ) {
	  ($kopt, $value) = split(/\s*=\s*/, $line, 2);
	  printf HELPFILE ("    \"    %-*s\",\n", $maxlen, $value);
	  $value =~ s/_/\\_/;
	  print TRFILE "\\item[{\\tt $value}\\ \\ \\hfill]\n";
	} else {
	  $hline = $line;
	  $hline =~ s/\"/\\\"/g;
	  $hline =~ s/\\cite//og;
#	  if ( $lines == 0 ) {
#	    print HELPFILE "$hline\",\n";
#	  }
#	  else {
	    print HELPFILE "    \"        $hline\",\n";
#	  }
#	    $line = /\sFLOAT/XXX
	  $line =~ s/^FLOAT/\\makebox[20mm][l]{\\sf \\small FLOAT}/;
	  $line =~ s/^INTEGER/\\makebox[20mm][l]{\\sf \\small INTEGER}/;
	  $line =~ s/^STRING/\\makebox[20mm][l]{\\sf \\small STRING}/;
	  $line =~ s/_/\\_/;
	  print TRFILE "$line\n";
	  $lines = $lines + 1;
	}
      }
      print TRFILE "\\end{defalist}\n";
      print TRFILE "\\end{minipage}\n";
      print TRFILE "\\addtolength{\\miniwidth}{8mm}\n";
    }

#   Note

    undef @parlines;
    $lblock = 0;
    foreach $tag (@doclines) {
      ($kword,$kopt) = split(" ", $tag);
      $kword = uc($kword);
      if ( $lblock == 0 ) {
	if ( "$kword" eq "\@BEGINNOTE" ) {
	  $lblock = 1;
	  next;
	}
      }
      if ( $lblock == 1 ) {
	if ( "$kword" eq "\@ENDNOTE" ) { last; }
	push(@parlines, $tag);
      }
    }

    if ( $lblock == 1 ) {
      print TRFILE "\n\\subsection*{Note}\n\n";
      print TRFILE "\\setlength{\\miniwidth}{\\textwidth}\n";
      print TRFILE "\\addtolength{\\miniwidth}{-8mm}\n";
      print TRFILE "\\hspace*{8mm}\\begin{minipage}{\\miniwidth}\n";

      $help_spaces = 0;
      $help_print = 0;
      print_description(@parlines);
      $help_print = 1;

      print TRFILE "\\end{minipage}\n";
      print TRFILE "\\addtolength{\\miniwidth}{8mm}\n";
    }

#   Example

    undef @parlines;
    $lblock = 0;
    foreach $tag (@doclines) {
      ($kword,$kopt) = split(" ", $tag);
      $kword = uc($kword);
      if ( $lblock == 0 ) {
	if ( "$kword" eq "\@BEGINEXAMPLE" ) {
	  $lblock = 1;
	  next;
	}
      }
      if ( $lblock == 1 ) {
	if ( "$kword" eq "\@ENDEXAMPLE" ) { last; }
	push(@parlines, $tag);
      }
    }

    if ( $lblock == 1 ) {
      print TRFILE "\n\\subsection*{Example}\n\n";
      print TRFILE "\\setlength{\\miniwidth}{\\textwidth}\n";
      print TRFILE "\\addtolength{\\miniwidth}{-8mm}\n";
      print TRFILE "\\hspace*{8mm}\\begin{minipage}{\\miniwidth}\n";

      $help_spaces = 0;
      $help_print = 0;
      print_description(@parlines);
      $help_print = 1;

      print TRFILE "\\end{minipage}\n";
      print TRFILE "\\addtolength{\\miniwidth}{8mm}\n";
    }

#   See also

#    $nop = 0;
#    $linelen = 0;
#    $lineend = 0;
#    foreach $oper (@hkeys) {
#      if ( $oper ne $operator ) {
#	$nop = $nop + 1;
#	if ( $nop == 1 ) {
#	  print HELPFILE "    \"\",\n";
#	  print HELPFILE "    \"SEE ALSO\",\n";
#	}
#	if ( $linelen > 70 ) {
#	  $linelen = 0;
#	  print HELPFILE ",\",\n";
#	}
#	if ( $linelen == 0 ) {
#	  print HELPFILE "    \"    $oper";
#	}
#	else {
#	  print HELPFILE ", $oper";
#	}
#	$linelen = $linelen + length($oper) + 2;
#      }
#    }
#    if ( $lineend == 0 && $nop > 0 ) {
#      print HELPFILE "\",\n";
#    }

#   End

#      print HELPFILE "    \"\",\n";
#      print HELPFILE "    \"\@End_${operator}\",\n";

    print HELPFILE "    NULL\n";
    print HELPFILE "};\n";

    print TCFILE "\\end{tabular*}\n";
    print TCFILE "\\vspace{1mm}\n";
    print TCFILE "\n";

    print CDOHTML "</table>\n";

    print TRLIST "\\end{tabular*}\n";
    print TRLIST "\\vspace{1mm}\n";
    print TRLIST "\n";

    print TRCARD "\\rowcolor[gray]{.9}\n";
    print TRCARD "\\makebox[$len2][r]{Syntax} ";
    if ( "$opername" eq "selpctl" )  {
      $marguments =~ s/ifile/in/og;
      $marguments =~ s/ofile/out/og;
    }
    $opernamex = $opername;
    $opernamex =~ s/_/\\_/;
    if ( $xopercnt == 1 ) {
      print TRCARD "& \\hspace*{0mm}{\\bf $opernamex}{\\sl $operpara} \ {\\tt $marguments} ";
    } else {
      print TRCARD "& \\hspace*{0mm}{\$<\\!operator\\!>\$}{\\sl $operpara} \ {\\tt $marguments} ";
    }
    print TRCARD "\\\\ \\hline \n";

    print TRCARD "\\end{tabular*}\n";
    print TRCARD "\\vspace{1mm}\n";
    print TRCARD "\n";
}
print TRCARD "\\end{document}\n";
#print TCFILE "\\end{tabular*}\n";
#print TCFILE "\n";
#
close(HELPFILE);
close(TRFILE);
close(TCFILE);
close(TROVER);
close(TRCARD);
close(MOFILE);
#
print "\nNumber of operators: $noper\n";


sub print_description {
  my @lines;
  @lines = @_;
  $nspace = $help_spaces;
  $noff   = 0;
  $ntab   = 0;

  $math    = 0;
  $itemize = 0;
  $doc     = 0;
  $man     = 0;
  $list    = 0;
  $text    = 0;
  $verb    = 0;
  foreach $tag (@lines) {
    $line = $tag;
    ($kword,$kopt) = split(" ", $line);
    $kword = uc($kword);
    if ( "$kword" eq "\@BEGINITEMIZE" ) {
      print TRFILE "\\begin{itemize}\n";
#      $nspace += 0;
      $itemize = 1;
    } elsif ( "$kword" eq "\@ENDITEMIZE" ) {
      print TRFILE "\\end{itemize}\n";
#      $nspace -= 0;
      $itemize = 0;
    } elsif ( "$kword" eq "\@BEGINLIST" ) {
      print TRFILE "\\begin{defalist}{$kopt \\ \\ }\n";
      $noff = length($kopt);
      $list = 1;
    } elsif ( "$kword" eq "\@ENDLIST" ) {
      print TRFILE "\\end{defalist}\n";
      $list = 0;
    } elsif ( $itemize == 1 && "$kword" eq "\@ITEM" ) {
      ($kopt, $value) = split(/\s*=\s*/, $line, 2);
      if ( $help_print == 1 ) {
	printf HELPFILE ("    \"    %*s%s- ${value}\",\n", $nspace, "");
      }
      print TRFILE "\\item  $value\n";
    } elsif ( $list == 1 && "$kword" eq "\@ITEM" ) {
      ($kopt, $value) = split(/\s*=\s*/, $line, 2);
      if ( $help_print == 1 ) {
	$ntab = $noff - length($value);
	if ( $ntab < 0 ) { $ntab = 0 };
#	printf HELPFILE ("    \"    %*s%s%s%*s%s\"", $nspace, "", ${value}, $ntab, "");
	printf HELPFILE ("    \"    %*s%s${value}", $nspace, "");
	printf HELPFILE ("%*s%s\"", $ntab, "");
      }
      print TRFILE "\\item[{$value}\\ \\ \\hfill]\n";
    } elsif ( "$kword" eq "\@BEGINMATH" ) {
#	  print TRFILE "\n";
#	  print TRFILE "\\vspace*{2mm}\n";
#	  print TRFILE "\\hspace*{5mm}\\begin{math}\n";
      print TRFILE "\\begin{math}\n";
      $math = 1;
    } elsif ( "$kword" eq "\@ENDMATH" ) {
      print TRFILE "\\end{math}\n";
#	  print TRFILE "\\vspace*{2mm}\n";
      print TRFILE "\n";
      $math = 0;
    } elsif ( "$kword" eq "\@BEGINDISPLAYMATH" ) {
      print TRFILE "\\begin{displaymath}\n";
      $math = 1;
    } elsif ( "$kword" eq "\@ENDDISPLAYMATH" ) {
      print TRFILE "\\end{displaymath}\n";
      print TRFILE "\n";
      $math = 0;
    } elsif ( "$kword" eq "\@BEGINVERBATIM" ) {
      print TRFILE "\\begin{lstlisting}[backgroundcolor=\\color{zebg}, basicstyle=\\small]\n";
      $verb = 1;
    } elsif ( "$kword" eq "\@ENDVERBATIM" ) {
      print TRFILE "\\end{lstlisting}\n";
      $verb = 0;
    } elsif ( "$kword" eq "\@BEGINLISTING" ) {
      print TRFILE "\\begin{lstlisting}[frame=single, backgroundcolor=\\color{zebg}, basicstyle=\\small]\n";
      $text = 1;
    } elsif ( "$kword" eq "\@ENDLISTING" ) {
      print TRFILE "\\end{lstlisting}\n";
      $text = 0;
    } elsif ( "$kword" eq "\@IFMAN" ) {
      $man = 1;
    } elsif ( "$kword" eq "\@ENDIFMAN" ) {
      $man = 0;
    } elsif ( "$kword" eq "\@IFDOC" ) {
      $doc = 1;
    } elsif ( "$kword" eq "\@ENDIFDOC" ) {
      $doc = 0;
    } else {
      $docline = $line;
      if ( $man == 0 ) {
	if ( $math == 0 && $verb == 0 && $text == 0 ) {
	  $line =~ s/CDO_PCTL_NBINS/CDO\\_PCTL\\_NBINS/og;
	  $line =~ s/\@newline/ \\\\/og;
	  $line =~ s/ ifile / {\\tt ifile} /og;
	  $line =~ s/ ifile1 / {\\tt ifile1} /og;
	  $line =~ s/ ifile2 / {\\tt ifile2} /og;
	  $line =~ s/ ofile / {\\tt ofile} /og;
	  $line =~ s/ ifiles / {\\tt ifiles} /og;
	  $line =~ s/\@math\{([^}]*)\}/\\begin{math}\1\\end{math}/og;
	  $line =~ s/\@file\{([^}]*)\}/{\\tt \1}/og;
	  $line =~ s/\@oper\{([^}]*)\}/{\\htmlref{\1}{\1}}/og;
	  $line =~ s/\@var\{([^}]*)\}/{\\it \1}/og;
	  $line =~ s/\@mod\{([^}]*)\}/{\\htmlref{\1}{\1}}/og;
	  $line =~ s/\@env\{([^}]*)\}/{\\tt \1}/og;
	  $line =~ s/\@cite\{([^}]*)\}/\\cite{\1}/og;
	  $line =~ s/</\$<\$/og;
	  $line =~ s/>/\$>\$/og;
	  $line =~ s/%/\\%/og;
	}
	print TRFILE "$line\n";
      }
      if ( $doc == 0 ) {
	$docline =~ s/\@newline//og;
	$docline =~ s/\@math\{([^}]*)\}/\1/og;
	$docline =~ s/\@file\{([^}]*)\}/\1/og;
	$docline =~ s/\@oper\{([^}]*)\}/\1/og;
	$docline =~ s/\@var\{([^}]*)\}/\1/og;
	$docline =~ s/\@mod\{([^}]*)\}/\1/og;
	$docline =~ s/\@env\{([^}]*)\}/\1/og;
	$docline =~ s/\@cite\{([^}]*)\}/\1/og;
	$docline =~ s/\\/\\\\/og;
	$docline =~ s/\\cite//og;
#	$docline =~ s/%/\\%/og;
	$docline =~ s/"/\\"/og;
	if ( $help_print == 1 ) {
	  printf HELPFILE ("    \"    %*s%s\",\n", $nspace, "", $docline);
	}
      }
    }
  }
}
