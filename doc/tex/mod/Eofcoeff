@BeginModule
@NewPage
@Name      = Eofcoeff
@Title     = Principal coefficients of EOFs
@Section   = EOFs
@Class     = Eof coefficients
@Arguments = ifile1 ifile2 obase
@Operators = eofcoeff

@BeginDescription
This module calculates the time series of the principal coefficients for given EOF
(empirical orthogonal functions) and data. Time steps in @file{ifile1} are 
assumed to be the EOFs, Time steps in @file{ifile2} are assumed to be the
time series. Weights are taken into account, which is why EOF output is \bf{not} weighted. 
@IfDoc
Given a set of EOFs @math{e_j} and a time series of data @math{z(t)} 
with @math{p} entries for each time step from which @math{e_j} have been calculated, this 
operator calculates the time series of the projections of data onto each EOF
@BeginDisplayMath
o_j(t) = \sum_{x=1}^{p} z(t,x)e_j(x)
@EndDisplayMath
with a seperate file @math{o_j} for each EOF.
@EndifDoc

There will be a separate file containing a time series of principal coefficients
with time information from @file{ifile2} for each EOF in @file{ifile1}. Files
will be numbered as @file{<obase>_<neof>.<suffix>} where neof is the number of the
EOF (time step) in @file{ifile1} and suffix is a file-suffix derived from the 
current file format. 
@EndDescription
@EndModule


@BeginOperator_eofcoeff
@Title     = Calculate principal coefficients for all EOFs in @file{ifile1}
@EndOperator


@BeginExample
To calculate principal coefficients of the first 40 EOFs of ifile, 
and write the to ofile, use:
@BeginVerbatim
   cdo eof,40 anom_file evec_file eof_file
   cdo eofcoeff eof_file anom_file obase
@EndVerbatim
The principal coefficients of the first EOF will be in the file
@file{obase_000000.nc}

If the dataset @file{ifile} does not containt anomalies, process them first,
and use:
@BeginVerbatim
   cdo sub ifile1 -timmean ifile1 anom_file	
   cdo eof,40 anom_file evec_file eof_file
   cdo eofcoeff eof_file anom_file obase 	
@EndVerbatim
@EndExample
