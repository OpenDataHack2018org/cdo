@BeginModule
@NewPage
@Name      = CMORlite
@Title     = CMOR lite
@Section   = Miscellaneous
@Arguments = ifile ofile
@Operators = cmorlite

@BeginDescription
The @cite{CMOR} (Climate Model Output Rewriter) library comprises a set of
functions, that can be used to produce CF-compliant NetCDF files that 
fulfill the requirements of many of the climate community's standard
model experiments. These experiments are collectively referred to as
MIP's. Much of the metadata written to the output files is defined in
MIP-specific tables, typically made available from each MIP's web site.

The CDO operator cmorlite process the header and variable section
of such MIP tables and writes the result with the internal IO library @cite{CDI}.
In addition to the CMOR 2 and 3 table format, the CDO parameter table format
is also supported. The following parameter table entries are available:

@BeginTable
 @bold{Entry}           & @bold{Type}        & @bold{Description}      
 @boldtt{name}            & WORD        & Name of the variable
 @boldtt{out_name}        & WORD        & New name of the variable
 @boldtt{type}            & WORD        & Data type (real or double)
 @boldtt{standard_name}   & WORD        & As defined in the CF standard name table
 @boldtt{long_name}       & STRING      & Describing the variable
 @boldtt{units}           & STRING      & Specifying the units for the variable
 @boldtt{comment}         & STRING      & Information concerning the variable
 @boldtt{cell_methods}    & STRING      & Information concerning calculation of means or climatologies
 @boldtt{cell_measures}   & STRING      & Indicates the names of the variables containing cell areas and volumes
 @boldtt{missing_value}   & FLOAT       & Specifying how missing data will be identified
 @boldtt{valid_min}       & FLOAT       & Minimum valid value
 @boldtt{valid_max}       & FLOAT       & Maximum valid value
 @boldtt{ok_min_mean_abs} & FLOAT       & Minimum absolute mean
 @boldtt{ok_max_mean_abs} & FLOAT       & Maximum absolute mean
 @boldtt{factor}          & FLOAT       & Scale factor
 @boldtt{delete}          & INTEGER     & Set to 1 to delete variable
 @boldtt{convert}         & INTEGER     & Set to 1 to convert the unit if necessary
@EndTable

Most of the above entries are stored as variables attributes, some of them are handled differently.
The variable @boldtt{name} is used as a search key for the parameter table. @boldtt{valid_min}, @boldtt{valid_max},
@boldtt{ok_min_mean_abs} and @boldtt{ok_max_mean_abs} are used to check the range of the data.
@EndDescription
@EndModule


@BeginOperator_cmorlite
@Title     = CMOR lite
@Parameter = table [convert]
@EndOperator


@BeginParameter
@Item = table
STRING   Name of the CMOR table as specified from PCMDI
@Item = convert
STRING   Converts the units if necessary
@EndParameter


@BeginExample
Here is an example of a parameter table for one variable:
@BeginVerbatim
prompt> cat mypartab
&parameter
  name            = t
  out_name        = ta
  standard_name   = air_temperature
  units           = "K"
  missing_value   = 1e+20
  valid_min       = 157.1
  valid_max       = 336.3
/
@EndVerbatim

To apply this parameter table to a dataset use:
@BeginVerbatim
cdo -f nc cmorlite,mypartab,convert  ifile  ofile
@EndVerbatim
This command renames the variable @boldtt{t} to @boldtt{ta}. The standard name of this variable is set to @boldtt{air_temperature} and 
the unit is set to [@boldtt{K}] (converts the unit if necessary). The missing value will be set to @boldtt{1e+20}. 
In addition it will be checked whether the values of the variable are in the range of @bold{157.1} to @boldtt{336.3}.
The result will be stored in NetCDF.
@EndExample
